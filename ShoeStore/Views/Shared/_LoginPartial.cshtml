@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <li>
        <a id="manage" class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            @UserManager.GetUserName(User)
        </a>
    </li>
    <li>
        <hr class="dropdown-divider">
    </li>
    <li>
        <form id="logoutForm" class="form-inline dropdown-item" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    @* <li class="nav-item"> *@
    @*     <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a> *@
    @* </li> *@
    @* <li class="nav-item"> *@
    @*     <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a> *@
    @* </li> *@
    
    <li>
        <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Login" >Login</a>
    </li>
    <li>
        <hr class="dropdown-divider">
    </li>
    <li>
        <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
}
